// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ToggleParserOKCode is the HTTP code returned for type ToggleParserOK
const ToggleParserOKCode int = 200

/*ToggleParserOK OK

swagger:response toggleParserOK
*/
type ToggleParserOK struct {
}

// NewToggleParserOK creates ToggleParserOK with default headers values
func NewToggleParserOK() *ToggleParserOK {

	return &ToggleParserOK{}
}

// WriteResponse to the client
func (o *ToggleParserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ToggleParserBadRequestCode is the HTTP code returned for type ToggleParserBadRequest
const ToggleParserBadRequestCode int = 400

/*ToggleParserBadRequest Invalid request data

swagger:response toggleParserBadRequest
*/
type ToggleParserBadRequest struct {
}

// NewToggleParserBadRequest creates ToggleParserBadRequest with default headers values
func NewToggleParserBadRequest() *ToggleParserBadRequest {

	return &ToggleParserBadRequest{}
}

// WriteResponse to the client
func (o *ToggleParserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// ToggleParserNotFoundCode is the HTTP code returned for type ToggleParserNotFound
const ToggleParserNotFoundCode int = 404

/*ToggleParserNotFound Parser not found

swagger:response toggleParserNotFound
*/
type ToggleParserNotFound struct {
}

// NewToggleParserNotFound creates ToggleParserNotFound with default headers values
func NewToggleParserNotFound() *ToggleParserNotFound {

	return &ToggleParserNotFound{}
}

// WriteResponse to the client
func (o *ToggleParserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
