// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/crxfoz/seo_metrick_parser/server/api/models"
)

// GetParsersOKCode is the HTTP code returned for type GetParsersOK
const GetParsersOKCode int = 200

/*GetParsersOK OK

swagger:response getParsersOK
*/
type GetParsersOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Parser `json:"body,omitempty"`
}

// NewGetParsersOK creates GetParsersOK with default headers values
func NewGetParsersOK() *GetParsersOK {

	return &GetParsersOK{}
}

// WithPayload adds the payload to the get parsers o k response
func (o *GetParsersOK) WithPayload(payload []*models.Parser) *GetParsersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get parsers o k response
func (o *GetParsersOK) SetPayload(payload []*models.Parser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetParsersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Parser, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetParsersBadGatewayCode is the HTTP code returned for type GetParsersBadGateway
const GetParsersBadGatewayCode int = 502

/*GetParsersBadGateway Database is down

swagger:response getParsersBadGateway
*/
type GetParsersBadGateway struct {
}

// NewGetParsersBadGateway creates GetParsersBadGateway with default headers values
func NewGetParsersBadGateway() *GetParsersBadGateway {

	return &GetParsersBadGateway{}
}

// WriteResponse to the client
func (o *GetParsersBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(502)
}
